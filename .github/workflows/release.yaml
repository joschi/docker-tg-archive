name: Release
on:
  push:
    tags:
      - '*'
jobs:
  docker:
    permissions:
      id-token: write
      attestations: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          persist-credentials: false
      - name: Install Cosign
        uses: sigstore/cosign-installer@398d4b0eeef1380460a10c8013a76f728fb906ac # v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3
      - name: Get Git commit timestamps
        run: echo "TIMESTAMP=$(git log -1 --pretty=%ct)" >> "$GITHUB_ENV"
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5
        with:
          images: joschi/tg-archive
      - name: Build Docker image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          load: true
          push: false
          tags: joschi/tg-archive:${{ github.sha }}-test
          labels: ${{ steps.meta.outputs.labels }}
        env:
          SOURCE_DATE_EPOCH: ${{ env.TIMESTAMP }}
      - name: Scan image
        id: scan
        uses: anchore/scan-action@1638637db639e0ade3258b51db49a9a137574c3e # v6
        with:
          image: joschi/tg-archive:${{ github.sha }}-test
          fail-build: false
      - name: Login to DockerHub
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build and push
        id: build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          push: true
          sbom: true
          provenance: mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
        env:
          SOURCE_DATE_EPOCH: ${{ env.TIMESTAMP }}
      - name: Attest
        uses: actions/attest-build-provenance@977bb373ede98d70efdf65b84cb5f73e068dcc2a # v3
        id: attest
        with:
          subject-name: index.docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/tg-archive
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true
      - name: Sign the images with GitHub OIDC Token
        env:
          DIGEST: ${{ steps.build.outputs.digest }}
          TAGS: ${{ steps.meta.outputs.tags }}
        shell: bash
        run: |
          declare -a images
          for tag in ${TAGS}; do
            images+=("${tag}@${DIGEST}")
          done
          cosign sign --yes "${images[@]}"
